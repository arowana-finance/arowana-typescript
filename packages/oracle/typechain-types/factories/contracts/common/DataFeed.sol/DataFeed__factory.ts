/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  DataFeed,
  DataFeedInterface,
} from "../../../../contracts/common/DataFeed.sol/DataFeed.js";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newSettler",
        type: "address",
      },
    ],
    name: "AddSettler",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "current",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
    ],
    name: "AnswerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldSettler",
        type: "address",
      },
    ],
    name: "RemoveSettler",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settler",
        type: "address",
      },
    ],
    name: "addSettler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_settler",
        type: "address",
      },
    ],
    name: "removeSettler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settlers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "newAnswer",
        type: "int256",
      },
    ],
    name: "updateAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040526001608052600860a052348015601957600080fd5b5060805160a051610a0061003f6000396000610100015260006101f70152610a006000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80638205bf6a1161008c578063b1da41fe11610066578063b1da41fe146101b7578063c4d66de8146101cc578063f2fde38b146101df578063fcab1819146101f257600080fd5b80638205bf6a146101615780638da5cb5b1461016a578063a87a20ce146101a457600080fd5b8062b105e6146100d357806314d3940d146100e8578063313ce567146100fb57806350d25bcd14610139578063668a0f0214610150578063715018a614610159575b600080fd5b6100e66100e13660046108d4565b610219565b005b6100e66100f63660046108d4565b6102bb565b6101227f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020015b60405180910390f35b61014260035481565b604051908152602001610130565b61014260045481565b6100e6610354565b61014260025481565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610130565b6100e66101b23660046108fd565b610368565b6101bf6103c9565b6040516101309190610916565b6100e66101da3660046108d4565b6103da565b6100e66101ed3660046108d4565b6104d6565b6101427f000000000000000000000000000000000000000000000000000000000000000081565b610221610511565b61022c60008261056c565b61026f5760405162461bcd60e51b815260206004820152600f60248201526e24a72b20a624a22fa9a2aa2a2622a960891b60448201526064015b60405180910390fd5b61027a600082610593565b506040516001600160a01b03821681527fc75b24622d5a8552bcfe775a11d9009ac47d4c050a3af79686aebe33f902fc03906020015b60405180910390a150565b6102c3610511565b6102ce60008261056c565b1561030f5760405162461bcd60e51b8152602060048201526011602482015270222aa82624a1a0aa22afa9a2aa2a2622a960791b6044820152606401610266565b61031a6000826105a8565b506040516001600160a01b03821681527f0e8d4de8d62b8ad5b1837a4a13009121b82a40e3bdcd6e6f454a72418cc86b0e906020016102b0565b61035c610511565b61036660006105bd565b565b61037360003361056c565b6103ad5760405162461bcd60e51b815260206004820152600b60248201526a2727aa2fa9a2aa2a2622a960a91b6044820152606401610266565b6103c68160045460016103c09190610978565b4261062e565b50565b60606103d56000610687565b905090565b60006103e461069b565b805490915060ff600160401b820416159067ffffffffffffffff1660008115801561040c5750825b905060008267ffffffffffffffff1660011480156104295750303b155b905081158015610437575080155b156104555760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561047f57845460ff60401b1916600160401b1785555b610488866106c4565b83156104ce57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6104de610511565b6001600160a01b03811661050857604051631e4fbdf760e01b815260006004820152602401610266565b6103c6816105bd565b336105437f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146103665760405163118cdaa760e01b8152336004820152602401610266565b6001600160a01b038116600090815260018301602052604081205415155b90505b92915050565b600061058a836001600160a01b0384166106de565b600061058a836001600160a01b0384166107d1565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b806002541061063c57505050565b600281905560038390556004829055604051818152829084907f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f9060200160405180910390a3505050565b6060600061069483610820565b9392505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061058d565b6001600160a01b0381166106d55750335b61030f8161087c565b600081815260018301602052604081205480156107c757600061070260018361098b565b85549091506000906107169060019061098b565b905080821461077b5760008660000182815481106107365761073661099e565b90600052602060002001549050808760000184815481106107595761075961099e565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061078c5761078c6109b4565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061058d565b600091505061058d565b60008181526001830160205260408120546108185750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561058d565b50600061058d565b60608160000180548060200260200160405190810160405280929190818152602001828054801561087057602002820191906000526020600020905b81548152602001906001019080831161085c575b50505050509050919050565b61088461088d565b6103c6816108b2565b6108956108ba565b61036657604051631afcd79f60e31b815260040160405180910390fd5b6104de61088d565b60006108c461069b565b54600160401b900460ff16919050565b6000602082840312156108e657600080fd5b81356001600160a01b038116811461069457600080fd5b60006020828403121561090f57600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b818110156109575783516001600160a01b0316835260209384019390920191600101610930565b509095945050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561058d5761058d610962565b8181038181111561058d5761058d610962565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212200c49f3a8e3b7d3ea08a92bd30a2c2ffab33b6e0486d421e2ba0db6982201b4c464736f6c634300081e0033";

type DataFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataFeedConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataFeed__factory extends ContractFactory {
  constructor(...args: DataFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DataFeed__factory {
    return super.connect(runner) as DataFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataFeedInterface {
    return new Interface(_abi) as DataFeedInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DataFeed {
    return new Contract(address, _abi, runner) as unknown as DataFeed;
  }
}
